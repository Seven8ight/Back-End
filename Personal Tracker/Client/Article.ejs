<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%=Header%></title>
    <script
      src="https://kit.fontawesome.com/9e14e23008.js"
      crossorigin="anonymous"
    ></script>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Cookie&family=Dancing+Script:wght@400..700&family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=Lobster+Two:ital,wght@0,400;0,700;1,400;1,700&family=Montserrat:ital,wght@0,100..900;1,100..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto+Flex:opsz,wght@8..144,100..1000&family=Roboto:ital,wght@0,100..900;1,100..900&display=swap"
      rel="stylesheet"
    />
    <style>
      header,
      #article {
        margin: auto;
        width: 70vw;
      }
      header {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        position: relative;
        top: 30px;
        align-items: center;

        /* From https://css.glass */
        background: rgba(255, 255, 255, 0.05);
        border-radius: 16px;
        box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
        backdrop-filter: blur(5.7px);
        -webkit-backdrop-filter: blur(5.7px);
      }
      header > h1 {
        font-size: 22px;
        font-family: "Dancing Script", sans-serif;
      }
      header > p {
        font-family: "Cookie", sans-serif;
        font-size: 20px;
        margin-right: 15px;
      }
      header button {
        background: transparent;
        border: none;
        margin-left: 15px;
        cursor: pointer;
      }
      #article {
        position: relative;
        top: 60px;
      }
      #article > #image {
        position: relative;
      }
      #article > #image > img {
        width: 95%;
        height: 500px;
        object-fit: cover;
        display: block;
        margin: auto;
        border-radius: 10px;
      }
      #article > #image > #overflow {
        width: 95%;
        height: 500px;
        background-color: rgba(150, 150, 150, 0.25);
        border-radius: 10px;
        z-index: 999;
        position: absolute;
        top: 0;
        left: 2.5%;
        opacity: 0;
        transition: opacity 0.5s ease-in-out;
        cursor: pointer;
      }
      #article > #image:hover > #overflow {
        opacity: 1;
      }
      #article > #image > #overflow #options,
      #article > #image > #overflow > div > div {
        position: absolute;
        right: 0;
      }
      #article > #image > #overflow #options > button {
        margin-top: 15px;
        margin-right: 10px;
        font-size: 20px;
        cursor: pointer;
      }
      #article > #image > #overflow > div > div {
        background: rgba(255, 255, 255, 0.05);
        border-radius: 5px;
        box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
        backdrop-filter: blur(5.7px);
        -webkit-backdrop-filter: blur(5.7px);
        width: 150px;
        padding: 10px;
        right: 20px;
        pointer-events: none;
        opacity: 0;
        transform: translateX(200px);
        transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
      }
      #article > #image > #overflow > div > div.open {
        opacity: 1;
        transform: translateX(0px);
        pointer-events: all;
      }
      #article > #image > #overflow > div > div > button {
        font-size: 15px;
        cursor: pointer;
        transition: box-shadow 0.5s ease-in-out, padding 0.5s ease-in-out,
          background-color 0.5s ease-in-out;
        width: 100%;
        border-radius: 10px;
      }
      #article > #image > #overflow > div > div > button:hover {
        box-shadow: 5px 5px 5px 0px rgba(200, 200, 200, 0.5);
        padding: 10px;
        background-color: white;
      }
      #article > #image > #overflow > div > button,
      #article > #image > #overflow > div > div > button {
        background: transparent;
        border: none;
      }
      #article > #image > #overflow > div > div > button {
        display: flex;
      }
      #article > #header-content {
        text-align: right;
        width: 95%;
        margin: auto;
      }
      #article > #header-content > h2 {
        font-family: "Roboto Flex", sans-serif;
        font-weight: lighter;
      }
      #article > #content {
        width: 70vw;
        height: auto;
        font-family: "Roboto Flex", sans-serif;
        position: relative;
        margin-bottom: 20px;
      }
      #section {
        width: 42.5%;
        margin-bottom: 50px;
      }
      #section.even {
        position: relative;
        left: 54.5%;
      }
      #section.even > h2 {
        text-align: right;
      }
      #section.even > p,
      #section.even > h2 {
        position: relative;
        left: 15px;
      }
      #section.even > #dot {
        left: -11.7%;
      }
      #dot {
        position: absolute;
        margin-top: 5px;
        left: 49.6%;
        width: 10px;
        height: 10px;
        border-radius: 20px;
        background-color: black;
      }
      #liner {
        position: absolute;
        left: 50%;
        width: 2px;
        height: 100%;
        background-color: black;
      }
      #widget {
        position: fixed;
        right: 20px;
        bottom: 20px;
        width: 20vw;
        height: 10vh;
        border-radius: 10px;
        background-color: cornsilk;
        box-shadow: 5px 5px 5px 0px rgba(100, 100, 100, 0.5);
        opacity: 0;
        transform: translateX(300px);
        transition: transform 0.5s ease-in-out, opacity 0.5s ease-in-out;
      }
      #widget.open {
        transform: translateX(0);
        opacity: 1;
      }
      #widget h1 {
        font-size: 1.35rem;
        text-align: center;
        font-family: "Dancing Script", sans-serif;
      }
      #widget #liner {
        width: 50%;
        height: 1px;
        background-color: grey;
        border-radius: 10px;
        position: absolute;
        left: 25%;
        top: 50%;
      }
      #widget p {
        text-align: center;
        font-family: "Roboto Flex", sans-serif;
        font-size: 0.75rem;
        position: relative;
        top: 5px;
      }
    </style>
  </head>
  <body>
    <header>
      <button><i class="fa-solid fa-chevron-left"></i></button>
      <h1><%=Header%></h1>
      <p id="time">Time here</p>
    </header>
    <div id="article" class="<%=id%>">
      <div id="image">
        <img src="<%=Image%>" />
        <div id="overflow">
          <div id="options">
            <button id="optionsBtn">
              <i class="fa-solid fa-ellipsis-vertical" style="color: white"></i>
            </button>
            <div id="innerOptions">
              <button id="updateBtn">Update</button>
              <button id="deleteBtn">Delete</button>
            </div>
          </div>
        </div>
      </div>
      <div id="header-content">
        <h2 id="date"><%=Date%></h2>
      </div>
      <div id="content">
        <div id="liner"></div>
        <% for(let article of articles) {%>
        <div id="section">
          <div id="dot"></div>
          <h2><%=article.ArticleHeader%></h2>
          <p><%=article.Content%></p>
        </div>
        <%} %>
      </div>
    </div>
    <div id="widget">
      <h1>Notice</h1>
      <div id="liner"></div>
      <div id="message">
        <p>Message here</p>
      </div>
    </div>
    <script>
      const date = new Date(),
        timeTag = document.getElementById("time"),
        dateTag = document.getElementById("date"),
        returnBtn = document.querySelector("button"),
        optionsBtn = document.getElementById("optionsBtn"),
        optionsDiv = document.getElementById("innerOptions"),
        sectionsDiv = document.querySelectorAll("#section"),
        updateBtn = document.querySelector("#updateBtn"),
        currentArticle = document.querySelector("#article"),
        deleteBtn = document.querySelector("#deleteBtn"),
        widget = document.getElementById("widget"),
        widgetMsg = document.querySelector("#widget #message p");

      const widgetOpen = (message) => {
        widget.classList.add("open");
        widgetMsg.innerHTML = message;

        setTimeout(() => {
          widget.classList.remove("open");
        }, 2000);
      };

      updateBtn.addEventListener("click", () => {
        let user = window.localStorage.getItem("email");

        if (!user) widgetOpen("Please log in or signup first");
        else {
          let role = window.localStorage.getItem("role");

          if (role) {
            if (role == "admin")
              window.location = `http://localhost:3000/article/update/${currentArticle.className}`;
            else widgetOpen("Admin use only");
          }
        }
      });

      optionsBtn.addEventListener("click", () => {
        if (optionsDiv.classList.contains("open"))
          optionsDiv.classList.remove("open");
        else optionsDiv.classList.add("open");
      });

      deleteBtn.addEventListener("click", async () => {
        let user = window.localStorage.getItem("email");

        if (!user) widgetOpen("Please log in or sign up first");
        else {
          let role = window.localStorage.getItem("role");

          if (role) {
            if (role == "admin") {
              let deleteReq = await fetch(
                `http://localhost:3000/article/delete/${currentArticle.className}`,
                {
                  method: "DELETE",
                }
              );

              if (deleteReq.status == 204)
                window.location = "http://localhost:3000";
            } else widgetOpen("Admin use only");
          }
        }
      });

      sectionsDiv.forEach((section, index) => {
        if ((index + 1) % 2 == 0) {
          section.classList.add("even");
        }
      });

      timeTag.innerHTML = `${
        date.getHours() < 10
          ? date.getHours().toString().padStart(2, "0")
          : date.getHours()
      }:${
        date.getMinutes() < 10
          ? date.getMinutes().toString().padStart(2, "0")
          : date.getMinutes()
      }`;
      dateTag.innerHTML = dateTag.innerHTML.replace(/\//g, " - ");
      returnBtn.addEventListener("click", () => {
        window.location = "http://localhost:3000";
      });

      setInterval(() => {
        timeTag.innerHTML = `${
          date.getHours() < 10
            ? date.getHours().toString().padStart(2, "0")
            : date.getHours()
        }:${
          date.getMinutes() < 10
            ? date.getMinutes().toString().padStart(2, "0")
            : date.getMinutes()
        }`;
      }, 1000);
    </script>
  </body>
</html>
